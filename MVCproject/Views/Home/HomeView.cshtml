@model List<MVCproject.Models.AppModel>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["title"] = "Home";
}
@*
   > model bazlı veri gönderimi :
    model bazlıda controllerda model üzerinden liste oluşturup dinamik bir şekilde modeli 
    kullanabilmek için direkt return viewın içine o oluşrurulan liste modelin adını dönerek viewa bildirip kullsnsbilriiz
    burada da appmodel listi oluşrurup itemları dinamik molarak kullandık.
    büyük model küçük molei kullanarak referans ediyor
 
   > viewbag ile view yapılanması:
    viewa taşınacak datayı"" dynamic"" şekilde tanımlanan bir değişkenle taşımamızı sağlayan bir veri taşıma kontrolüdür.
    controllerda action üzerinde viewbag.item = item dersem artık bu ilgili viewda erişilebilir hale gelir.
    foreach( var item in ViewBag.item as List<MVCproject.Models.AppModel>) 
            @item.Name     şeklinde yazılır  artık 

   > ViewData: 
    viewbagte olduğu gibi datayı viewa taşımamızı sağlayan bir konreoldür ama "boxing"" yaparak taşır ve indexer atamamız gerkir.
    ViewData["item"] =item; // contoller kısmı
    foreach( var item in ViewData["item"] as List<MVCproject.Models.AppModel>) //view kısmı
            @item.Name
    
            
   > View'a Tuple nesne gönderimi ve kullanımı:
   controllerda üretilen tuple nesnesi birden fazla nesneyi tarif eden bir nesnedir ve biz birden fazla neyseyi diğer view taşıma yapılarıyla da yapabiliriz .
   ama biz birden fazla nesneyi nasıl tanımlarız view modal üzerinde birden fazla nesneyi tutabilriz .
*@


@section HeadTags{
    <head>
        <link rel="stylesheet" href="~/css/home.css" />
    </head>

}
<div class="container">
    <main role="main" class="pb-3">
        <div class="row">

            <div class="col row text-center"><h1>Yazılım Park</h1></div>

        </div>
        <div class="container">
            <div class="row row-cols-md-4 row-cols-sm-1 row-cols-1 g-4 ">
                @foreach (var item in Model)
                {
                    <div class="col  h-100">
                        <div class="card home-card">
                            <img src="@item.Background" class="card-img-top img-card " style="border-radius: 15px" alt="Hollywood Sign on The Hill" />
                            <div class="d-flex justify-content-center">
                                <div class="button m-3 container  " style="padding-top: 14px">
                                    <a href="@item.Url" class="button mt-1 menu-link ">
                                        <h7 class="card-title text-center mt-1 menu-link ">@item.Name</h7>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </main>
</div>
